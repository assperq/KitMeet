package org.digital.kitmeet

import androidx.compose.material.BottomNavigation
import androidx.compose.material.BottomNavigationItem
import androidx.compose.material.Icon
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Call
import androidx.compose.material.icons.filled.FavoriteBorder
import androidx.compose.material.icons.filled.Person
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.navigation.NavHostController
import androidx.navigation.compose.currentBackStackEntryAsState

@Composable
fun BottomNavigationBar(navController: NavHostController) {
    val items = listOf(
        NavItem("–ö–∞—Ä—Ç—ã", MainRoutes.cards, Icons.Default.FavoriteBorder),
        NavItem("–ß–∞—Ç", MainRoutes.chat, Icons.Default.Call),
        NavItem("–ü—Ä–æ—Ñ–∏–ª—å", MainRoutes.profile, Icons.Default.Person)
    )

    BottomNavigation(
        backgroundColor = Color.White,
        contentColor = Color.Black
    ) {
        val currentRoute = navController.currentBackStackEntryAsState().value?.destination?.route
        items.forEach { item ->
            BottomNavigationItem(
                icon = {
                    Icon(
                        imageVector = item.icon,
                        contentDescription = item.label,
                        tint = if (currentRoute == item.route) Color(0xFF7F265B) else Color.Gray // üî¥ –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
                    )
                },
                label = {
                    Text(
                        text = item.label,
                        color = if (currentRoute == item.route) Color(0xFF7F265B) else Color.Gray // üî¥ –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                    )
                },
                selected = currentRoute == item.route,
                onClick = {
                    navController.navigate(item.route) {
                        popUpTo(MainRoutes.main) { inclusive = false }
                        launchSingleTop = true
                    }
                },
                selectedContentColor = Color(0xFF7F265B), // üî¥ –¶–≤–µ—Ç –ø—Ä–∏ –≤—ã–¥–µ–ª–µ–Ω–∏–∏
                unselectedContentColor = Color.Gray      // üîò –¶–≤–µ—Ç –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤—ã–±–æ—Ä–∞
            )
        }
    }
}

data class NavItem(val label: String, val route: String, val icon: ImageVector)

object MainRoutes {
    const val main = "main"
    const val cards = "cards"
    const val chat = "chat"
    const val profile = "profile" // —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    const val profileDetails = "profileDetails" // –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}