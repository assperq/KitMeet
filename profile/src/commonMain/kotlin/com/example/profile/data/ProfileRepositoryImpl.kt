package com.example.profile.data

import com.example.profile.domain.ProfileRepository
import io.github.jan.supabase.SupabaseClient
import io.github.jan.supabase.postgrest.from

class ProfileRepositoryImpl(
    private val supabaseClient: SupabaseClient
) : ProfileRepository {

    override suspend fun saveProfile(profile: Profile): Boolean {
        return try {
            val response = supabaseClient
                .from("profiles")
                .upsert(profile)

            println("üì¶ Supabase response: $response")
            true
        } catch (e: Exception) {
            println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${e.message}")
            false
        }
    }

    override suspend fun loadProfile(userId: String): Profile? {
        return try {
            val profile = supabaseClient
                .from("profiles")
                .select {
                    filter { eq("user_id", userId) }
                    limit(1)
                }
                .decodeSingle<Profile>()

            println("üì• –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: $profile")
            profile
        } catch (e: Exception) {
            println("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: ${e.message}")
            null
        }
    }
}